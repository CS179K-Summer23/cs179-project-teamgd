User Story #1:
As a developer, I want to enable customers to edit, upload, and delete their documents.
- Ensure that when a user uploads a document, the updated document list is printed out, and the new document is there.
- Ensure that when a user deletes a document, the updated document list is printed out, and the old document is removed.
- Ensure that when a user edits a document, their changes are saved, and they can view them later.

User Story #2:
As a developer, I want to enforce customers logging in with a username and password to view their secure documents
- Ensure when a customer starts the application, they are prompted with a login screen.
- Ensure that when a customer sees a login screen, they have a option to create an account.
- Ensure that when a customer creates an account, their information is stored in a a database.
- Ensure that when a customer attempts a login, their information is compared to the database information.
- Ensure that when a customer enters to correct information, they are logged in.
- Ensure that when a customer enters incorrect information, they are shown the message "invalid credentials".

User Story #3:
- Ensure that when a user logs in, they are greeted with a main menu page that includes different options for them to choose. 
- Ensure that when a user picks an option from the main menu, their input is validated and they are transitioned to the respective feature submenu page. 
- Ensure that when a user's input is invalid, they remain on the menu page and are prompted to try again. 

Week 2

- Ensure that when a user deletes a document, that document is removed and the information file about docs is updated
- Ensure that when a user pins a document, that document appears pinned
- Ensure that when a user runs the "find number of documents" query, the corrent number of documents is returned
- Ensure that when a user runs the "average word count" query, the corrent number of documents is returned
- Ensure that when a user runs the "average size" query, the currect average size of the documents is displayed to the user
- Ensure that when a user deletes a user login, those credentials can no longer be used to log in
- Ensure that when a user changes their username/password, their credentials are correctly changed, and the new credentials can be used to log in successfully
- Ensure that when a user runs the export function, the document is correctly downloaded to the machine
- Ensure that when a user runs the "sort documents in alphabetical order" function, the documents are correctly sorted (correct order when using list docs function, as well as docnum are updated)

Week 3

- Ensure that csv file is successfully exported from json doc
- Ensure that documents are sorted based on alphabetical order when requested
- Ensure that the database query for a document based on name is successful 
- Ensure that there is an open option after query
- Ensure that user permissions do not overstep security boundaries and respective accounts
- Ensure that necessary json file generation is successful
- Ensure that a file is shared successfully with another user when requested
- Ensure that username is successfully changed when requested
- Ensure that security questions are required for password retrieval
- Ensure that only an admin is allowed to delete other users
- Ensure that json file is verified on saving and uploading
- Ensure that a json schema is created
- Ensure that json file is properly queried when requested

Week 4

- Ensure that when loaded, the json file is loaded inside a table
- Ensure that users have respective permissions and security boundaries
- Ensure that users are able to share files with other users when requested
- Ensure that when reading nested JSON file, the file is flattenned
- Ensure that when loading a JSON file, a datastructure is properly created for that file
